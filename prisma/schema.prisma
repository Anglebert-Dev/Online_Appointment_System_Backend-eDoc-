// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma
model Doctor {
  id          String    @id @unique @default(uuid())
  username    String
  email       String    @unique
  phone       String
  specialties String[]
  password    String
  role        String    @default("DOCTOR")
  sessions    Session[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Patient {
  id           String        @id @unique @default(uuid())
  username     String
  role         String        @default("PATIENT")
  email        String        @unique
  phone        String
  password     String
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Session      Session?      @relation(fields: [sessionId], references: [id])
  sessionId    String?
}

model Session {
  id          String    @id @unique @default(uuid())
  title       String
  doctorId    String
  patients    Patient[]
  date        DateTime
  startTime   String
  endTime     String
  maxPatients Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  doctor      Doctor    @relation(fields: [doctorId], references: [id])
}

model Appointment {
  id                String   @id @unique @default(uuid())
  patientId         String
  appointmentNumber String
  sessionId         String
  date              DateTime
  startTime         String
  endTime           String
  status            String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  patient           Patient? @relation(fields: [patientId], references: [id])
}
